{"version":3,"sources":["components/Piece.js","config.js","components/Board.js","components/Popup.js","components/User.js","components/UserList.js","components/Controller.js","Utils.js","App.js","serviceWorker.js","index.js"],"names":["Piece","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","e","mark","move","identify","handleMouseOver","_this$props","myTurn","currentTurn","setState","hoverMark","handleMouseOut","state","react_default","a","createElement","id","onClick","className","concat","onMouseOver","onMouseOut","React","Component","SOCKET_IO_HOST","process","GOMOKU_COLUMN","GOMOKU_ROW","Board","componentDidMount","outerContent","$","innerContent","scrollLeft","width","window","scrollTo","innerHeight","updateMove","hasMark","_this$props2","xHistory","oHistory","indexOf","drawBoard","rowNumber","columnNumber","table","i","children","j","push","components_Piece","key","_this$props3","score","keys","map","k","quitGame","Popup","message","callback","cancel","User","invite","preventDefault","user","renderAction","canInvite","username","status","UserList","data","_this2","users","myUser","length","u","components_User","Controller","updateScore","winner","_this$state","opponent","setTimeout","newScore","handleQuitGame","socket","emit","resetGame","gameStart","gameOver","coordinate","split","value","parseInt","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_loop","x","sameX","filter","obj","listY","v","sort","b","result","forEach","y","sameY","listX","_iterator","Symbol","iterator","next","done","_ret","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_loop2","diagonal","_loop3","_iterator2","_ret2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_loop4","_loop5","_iterator3","_ret3","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_loop6","_loop7","_iterator4","_ret4","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_loop8","_loop9","_iterator5","_ret5","gameCycle","_this$state2","isXWin","isOWin","toggleGame","handleChange","target","handleEnter","registered","sendMove","_this$state3","_this$state4","displayWinner","components_Popup","clearMessage","displayPopup","handleInvite","acceptInvite","type","rejectInvite","displayInvite","handleKeyUp","keyCode","context","assertThisInitialized","currentUser","name","arguments","localStorage","getItem","getLocalItem","JSON","parse","on","find","code","setItem","stringify","setLocalItem","_this$state5","components_Board","href","components_UserList","placeholder","onChange","onKeyUp","App","display","connected","components_Controller","io","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0TA2CeA,cAxCb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAKRQ,YAAc,SAAAC,GACY,KAApBR,EAAKD,MAAMU,MAGfT,EAAKD,MAAMW,KAAKV,EAAKD,MAAMY,WAVVX,EAYnBY,gBAAkB,SAAAJ,GAAK,IAAAK,EACWb,EAAKD,MAA7Be,EADaD,EACbC,OACJA,IAFiBD,EACLE,aAIhBf,EAAKgB,SAAS,CAAEC,UAAWH,KAjBVd,EAmBnBkB,eAAiB,SAAAV,GACfR,EAAKgB,SAAS,CAAEC,UAAW,MAlB3BjB,EAAKmB,MAAQ,CACXF,UAAW,IAHIjB,wEAuBjB,IAAMS,EAAON,KAAKJ,MAAMU,KAClBQ,EAAqB,KAATR,EAAcN,KAAKgB,MAAMF,UAAY,GACvD,OACEG,EAAAC,EAAAC,cAAA,MACEC,GAAIpB,KAAKJ,MAAMY,SACfa,QAASrB,KAAKI,YACdkB,UAAS,SAAAC,OAAWjB,GAAXiB,OAAgC,KAAdT,EAAmB,SAAW,IACzDU,YAAaxB,KAAKS,gBAClBgB,WAAYzB,KAAKe,gBAEhBT,EACAQ,UAnCWY,IAAMC,WCFbC,EAAeC,iCACfC,EAAcD,KACdE,EAAWF,KCqFTG,6MAjFbC,kBAAoB,WAClB,IAAMC,EAAeC,IAAE,UACjBC,EAAeD,IAAE,WAEvBD,EAAaG,YAAaD,EAAaE,QAAUJ,EAAaI,SAAW,GACzEC,OAAOC,SAAS,EAAKD,OAAOE,YAAc,MAE5ClC,KAAO,SAAAC,GAAY,IAAAE,EACeb,EAAKD,MADpBc,EACTC,SADSD,EACDE,aAMhBf,EAAKD,MAAM8C,WAAWlC,MAGxBmC,QAAU,SAAAnC,GAAY,IAAAoC,EACW/C,EAAKD,MAA5BiD,EADYD,EACZC,SAAUC,EADEF,EACFE,SAElB,OAAID,EAASE,QAAQvC,IAAa,EACzB,IAELsC,EAASC,QAAQvC,IAAa,EACzB,IAEF,MAGTwC,UAAY,WAIV,IAHA,IAAMC,EAAYlB,EACZmB,EAAepB,EACjBqB,EAAQ,GACHC,EAAI,EAAGA,EAAIH,EAAWG,IAAK,CAElC,IADA,IAAIC,EAAW,GACNC,EAAI,EAAGA,EAAIJ,EAAcI,IAAK,CACrC,IAAM9C,EAAQ,GAAAe,OAAM6B,EAAN,KAAA7B,OAAW+B,GACzBD,EAASE,KACPtC,EAAAC,EAAAC,cAACqC,EAAD,CACEC,IAAKjD,EACLA,SAAUA,EACVD,KAAMV,EAAKU,KACXI,OAAQd,EAAKD,MAAMe,OACnBC,YAAaf,EAAKD,MAAMgB,YACxBN,KAAMT,EAAK8C,QAAQnC,MAIzB2C,EAAMI,KAAKtC,EAAAC,EAAAC,cAAA,MAAIsC,IAAKL,GAAIC,IAE1B,OAAOF,2EAGA,IAAAO,EACgC1D,KAAKJ,MAApCe,EADD+C,EACC/C,OAAQC,EADT8C,EACS9C,YAAa+C,EADtBD,EACsBC,MAC7B,OACE1C,EAAAC,EAAAC,cAAA,OAAKC,GAAG,QAAQE,UAAU,SACxBL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iBACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACZX,IAAWC,EAAc,OAAS,YADrC,MAIAK,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SAASqC,EAAQ7D,OAAO8D,KAAKD,GAAOE,IAAI,SAACC,EAAEV,GAAH,OACrDO,EAAMG,IAAY,IAANV,EAAU,MAAQ,MAAO,KAGzCnC,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACbL,EAAAC,EAAAC,cAAA,UAAQG,UAAU,MAAMD,QAASrB,KAAKJ,MAAMmE,UAA5C,UAKJ9C,EAAAC,EAAAC,cAAA,SAAOC,GAAG,SAASE,UAAU,UAC3BL,EAAAC,EAAAC,cAAA,aAAQnB,KAAKgD,sBA3EHtB,IAAMC,WCsBXqC,mLAxBJ,IAAAtD,EAC+BV,KAAKJ,MAAnCqE,EADDvD,EACCuD,QAASC,EADVxD,EACUwD,SAAUC,EADpBzD,EACoByD,OAC3B,OACElD,EAAAC,EAAAC,cAAA,OAAKG,UAAS,SAAAC,OAAuB,KAAZ0C,EAAiB,SAAW,KACnDhD,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WAAW2C,GAC1BhD,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACM,qBAAX6C,EACNlD,EAAAC,EAAAC,cAAA,UAAQG,UAAU,aAAaD,QAAS8C,GAAxC,MAIA,GAEFlD,EAAAC,EAAAC,cAAA,UAAQG,UAAU,MAAMD,QAAS6C,GAAjC,gBAfQxC,IAAMC,WC+BXyC,6MA9BbC,OAAS,SAAAhE,GACPA,EAAEiE,iBADU,IAGJC,EAAS1E,EAAKD,MAAd2E,KACR1E,EAAKD,MAAMyE,OAAOE,MAGpBC,aAAe,WAEb,OADkB3E,EAAKD,MAAM6E,UAEnBxD,EAAAC,EAAAC,cAAA,UAAQG,UAAU,cAAcD,QAASxB,EAAKwE,QAA9C,UAEH,4EAGA,IACCE,EAASvE,KAAKJ,MAAd2E,KACR,OACEtD,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIG,UAAU,QAAQiD,EAAKG,UAC3BzD,EAAAC,EAAAC,cAAA,MAAIG,UAAU,UACK,YAAhBiD,EAAKI,OACJJ,EAAKI,OACH3E,KAAKwE,wBAxBA9C,IAAMC,WCiCViD,6MA/BbP,OAAS,SAAAQ,GACPhF,EAAKD,MAAMyE,OAAOQ,4EAGX,IAAAC,EAAA9E,KAAAU,EACmBV,KAAKJ,MAAvBmF,EADDrE,EACCqE,MAAOC,EADRtE,EACQsE,OACf,OACE/D,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACbL,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACbL,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,aACG4D,EAAME,QAAU,EACfhE,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,MAAIG,UAAU,QAAd,qBACJyD,EAAMlB,IAAI,SAACqB,EAAG9B,GAAJ,OACRnC,EAAAC,EAAAC,cAACgE,EAAD,CACEV,aAAYO,GAA4B,YAAlBA,EAAOL,QAC7BlB,IAAKL,EACLiB,OAAQS,EAAKT,OACbE,KAAMW,iBApBHxD,IAAMC,eCifdyD,cA7eb,SAAAA,EAAYxF,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoF,IACjBvF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsF,GAAAjF,KAAAH,KAAMJ,KAuGRyF,YAAc,SAACC,GAAW,IAAAC,EACkB1F,EAAKmB,MAAxC2C,EADiB4B,EACjB5B,MAAOqB,EADUO,EACVP,OAAQrE,EADE4E,EACF5E,OAAQ6E,EADND,EACMC,SACzBA,GACHC,WAAW,WACT5F,EAAKwF,eACJ,KAEL,IAAIK,EAAW/B,EACVA,GAA2B,qBAAX2B,EAIV3B,IACL2B,IAAW3E,EACb+E,EAASV,EAAON,UAAYgB,EAASV,EAAON,UAAU,EAEtDgB,EAASF,EAASd,UAAYgB,EAASF,EAASd,UAAU,KAP5DgB,EAAW,IACFV,EAAON,UAAY,EAC5BgB,EAASF,EAASd,UAAY,GAQhC7E,EAAKgB,SAAS,CACZ8C,MAAO+B,KA5HQ7F,EAgInB8F,eAAiB,WACA9F,EAAKD,MAAMgG,OACnBC,KAAK,QACZhG,EAAKkE,YAnIYlE,EAsInBiG,UAAY,WACVjG,EAAKgB,SAAS,CACZiC,SAAU,GACVD,SAAU,MAzIKhD,EA6InBkE,SAAW,WACTlE,EAAKgB,SAAS,CACZyE,OAAQ,GACRzC,SAAU,GACVC,SAAU,GACVnC,OAAQ,GACRC,YAAa,IACbmF,WAAW,EACX1B,OAAQ,KACRmB,SAAU,KACV7B,MAAO,QAvJQ9D,EA2JnBmG,SAAW,SAAAC,GACT,IAAMC,EAAQD,EAAWpC,IAAI,SAAAsC,GAC3B,IAAMD,EAAQC,EAAMD,MAAM,KAC1B,MAAO,CAACE,SAASF,EAAM,IAAKE,SAASF,EAAM,OAHtBG,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAMvB,IANuB,IAMvBC,EANuBC,EAAA,eAMdP,EANcM,EAAAN,MAOfQ,EAAIR,EAAM,GACVS,EAAQV,EAAMW,OAAO,SAAAC,GAAG,OAAIA,EAAI,KAAOH,IAE7C,GAAIC,EAAM3B,QAAU,EAAG,CACrB,IAAM8B,EAAQH,EAAM/C,IAAI,SAAAmD,GAAC,OAAIA,EAAE,KAAIC,KAAK,SAAC/F,EAAGgG,GAAJ,OAAWhG,GAAKgG,IACpDC,GAAS,EAMb,GALAJ,EAAMK,QAAQ,SAACJ,EAAG5D,GACY,qBAAjB2D,EAAM3D,EAAI,IAAuB2D,EAAM3D,EAAI,GAAK4D,IAAM,IAC/DG,GAAS,KAGTA,EACF,OAAAH,EAAOG,GAIX,IAAME,EAAIlB,EAAM,GACVmB,EAAQpB,EAAMW,OAAO,SAAAC,GAAG,OAAIA,EAAI,KAAOO,IAC7C,GAAIC,EAAMrC,QAAU,EAAG,CACrB,IAAMsC,EAAQD,EAAMzD,IAAI,SAAAmD,GAAC,OAAIA,EAAE,KAAIC,KAAK,SAAC/F,EAAGgG,GAAJ,OAAWhG,GAAKgG,IACpDC,GAAS,EAMb,GALAI,EAAMH,QAAQ,SAACJ,EAAG5D,GACY,qBAAjBmE,EAAMnE,EAAI,IAAuBmE,EAAMnE,EAAI,GAAK4D,IAAM,IAC/DG,GAAS,KAGTA,EACF,OAAAH,EAAOG,KA5BbK,EAAkBtB,EAAlBuB,OAAAC,cAAArB,GAAAI,EAAAe,EAAAG,QAAAC,MAAAvB,GAAA,EAAyB,KAAAwB,EAAAnB,IAAA,qBAAAmB,EAAA,OAAAA,EAAAb,GANF,MAAAc,GAAAxB,GAAA,EAAAC,EAAAuB,EAAA,YAAAzB,GAAA,MAAAmB,EAAAO,QAAAP,EAAAO,SAAA,WAAAzB,EAAA,MAAAC,GAAA,IAAAyB,GAAA,EAAAC,GAAA,EAAAC,OAAA1B,EAAA,IAuCvB,IAvCuB,IAuCvB2B,EAvCuBC,EAAA,WA2CrB,IA3CqB,IAuCdjC,EAvCcgC,EAAAhC,MAwCfQ,EAAIP,SAASD,EAAM,IACnBkB,EAAIjB,SAASD,EAAM,IACnBkC,EAAW,GA1CIC,EAAA,SA2CZlF,GACQ8C,EAAMW,OAAO,SAAAG,GAAC,OAAIA,EAAE,KAAQL,EAAIvD,GAAM4D,EAAE,KAAQK,EAAIjE,IACxD6B,OAAS,GAClBoD,EAAS9E,KAAKH,IAHTA,EAAI,EAAGA,EAAI,EAAGA,IAAKkF,EAAnBlF,GAMT,GAAIiF,EAASpD,QAAU,EACrB,OAAA+B,GAAO,IAXXuB,EAAkBrC,EAAlBuB,OAAAC,cAAAM,GAAAG,EAAAI,EAAAZ,QAAAC,MAAAI,GAAA,EAAyB,KAAAQ,EAAAJ,IAAA,qBAAAI,EAAA,OAAAA,EAAAxB,GAvCF,MAAAc,GAAAG,GAAA,EAAAC,EAAAJ,EAAA,YAAAE,GAAA,MAAAO,EAAAR,QAAAQ,EAAAR,SAAA,WAAAE,EAAA,MAAAC,GAAA,IAAAO,GAAA,EAAAC,GAAA,EAAAC,OAAAnC,EAAA,IAsDvB,IAtDuB,IAsDvBoC,EAtDuBC,EAAA,WA0DrB,IA1DqB,IAsDd1C,EAtDcyC,EAAAzC,MAuDfQ,EAAIP,SAASD,EAAM,IACnBkB,EAAIjB,SAASD,EAAM,IACnBkC,EAAW,GAzDIS,EAAA,SA0DZ1F,GACQ8C,EAAMW,OAAO,SAAAG,GAAC,OAAIA,EAAE,KAAQL,EAAIvD,GAAM4D,EAAE,KAAQK,EAAIjE,IACxD6B,OAAS,GAClBoD,EAAS9E,KAAKH,IAHTA,EAAI,EAAGA,EAAI,EAAGA,IAAK0F,EAAnB1F,GAMT,GAAIiF,EAASpD,QAAU,EACrB,OAAA+B,GAAO,IAXX+B,EAAkB7C,EAAlBuB,OAAAC,cAAAe,GAAAG,EAAAG,EAAApB,QAAAC,MAAAa,GAAA,EAAyB,KAAAO,EAAAH,IAAA,qBAAAG,EAAA,OAAAA,EAAAhC,GAtDF,MAAAc,GAAAY,GAAA,EAAAC,EAAAb,EAAA,YAAAW,GAAA,MAAAM,EAAAhB,QAAAgB,EAAAhB,SAAA,WAAAW,EAAA,MAAAC,GAAA,IAAAM,GAAA,EAAAC,GAAA,EAAAC,OAAA3C,EAAA,IAqEvB,IArEuB,IAqEvB4C,EArEuBC,EAAA,WAyErB,IAzEqB,IAqEdlD,EArEciD,EAAAjD,MAsEfQ,EAAIP,SAASD,EAAM,IACnBkB,EAAIjB,SAASD,EAAM,IACnBkC,EAAW,GAxEIiB,EAAA,SAyEZlG,GACQ8C,EAAMW,OAAO,SAAAG,GAAC,OAAIA,EAAE,KAAQL,EAAIvD,GAAM4D,EAAE,KAAQK,EAAIjE,IACxD6B,OAAS,GAClBoD,EAAS9E,KAAKH,IAHTA,EAAI,EAAGA,EAAI,EAAGA,IAAKkG,EAAnBlG,GAMT,GAAIiF,EAASpD,QAAU,EACrB,OAAA+B,GAAO,IAXXuC,EAAkBrD,EAAlBuB,OAAAC,cAAAuB,GAAAG,EAAAG,EAAA5B,QAAAC,MAAAqB,GAAA,EAAyB,KAAAO,EAAAH,IAAA,qBAAAG,EAAA,OAAAA,EAAAxC,GArEF,MAAAc,GAAAoB,GAAA,EAAAC,EAAArB,EAAA,YAAAmB,GAAA,MAAAM,EAAAxB,QAAAwB,EAAAxB,SAAA,WAAAmB,EAAA,MAAAC,GAAA,IAAAM,GAAA,EAAAC,GAAA,EAAAC,OAAAnD,EAAA,IAoFvB,IApFuB,IAoFvBoD,EApFuBC,EAAA,WAwFrB,IAxFqB,IAoFd1D,EApFcyD,EAAAzD,MAqFfQ,EAAIP,SAASD,EAAM,IACnBkB,EAAIjB,SAASD,EAAM,IACnBkC,EAAW,GAvFIyB,EAAA,SAwFZ1G,GACQ8C,EAAMW,OAAO,SAAAG,GAAC,OAAIA,EAAE,KAAQL,EAAIvD,GAAM4D,EAAE,KAAQK,EAAIjE,IACxD6B,OAAS,GAClBoD,EAAS9E,KAAKH,IAHTA,EAAI,EAAGA,EAAI,EAAGA,IAAK0G,EAAnB1G,GAMT,GAAIiF,EAASpD,QAAU,EACrB,OAAA+B,GAAO,IAXX+C,EAAkB7D,EAAlBuB,OAAAC,cAAA+B,GAAAG,EAAAG,EAAApC,QAAAC,MAAA6B,GAAA,EAAyB,KAAAO,EAAAH,IAAA,qBAAAG,EAAA,OAAAA,EAAAhD,GApFF,MAAAc,GAAA4B,GAAA,EAAAC,EAAA7B,EAAA,YAAA2B,GAAA,MAAAM,EAAAhC,QAAAgC,EAAAhC,SAAA,WAAA2B,EAAA,MAAAC,GAmGvB,OAAO,GA9PU9J,EAiQnBoK,UAAY,WAAM,IAAAC,EACuBrK,EAAKmB,MAApC6B,EADQqH,EACRrH,SAAUC,EADFoH,EACEpH,SAAUnC,EADZuJ,EACYvJ,OAEtBwJ,EAAStK,EAAKmG,SAASnD,GACvBuH,EAASvK,EAAKmG,SAASlD,GAEzBmB,EAAU,GAUd,GARIkG,IACFlG,EAAqB,MAAXtD,EAAiB,UAAY,YAGrCyJ,IACFnG,EAAqB,MAAXtD,EAAiB,UAAY,YAGrCwJ,GAAUC,EAAQ,CACpB,IAAM9E,EAAS6E,EAAS,IAAM,IAC9BtK,EAAKwF,YAAYC,GACjBrB,GAAW,gCACXpE,EAAKgB,SAAS,CACZyE,OAAQrB,IAEVpE,EAAKiG,cAxRUjG,EA4RnBwK,WAAa,SAAA1J,GACXd,EAAKgB,SAAS,CACZyE,OAAQ,GACRS,WAAW,EACXpF,OAAQA,EACRmC,SAAU,GACVD,SAAU,GACVc,MAAO,OAET9D,EAAKwF,eArSYxF,EAwSnByK,aAAe,SAAAjK,GACbA,EAAEiE,iBACEjE,EAAEkK,OAAOpE,MAAMlB,OAAS,IAG5BpF,EAAKgB,SAAS,CAAE6D,SAAUrE,EAAEkK,OAAOpE,SA7SlBtG,EAgTnB2K,YAAc,SAAAnK,GACZ,IAAMuF,EAAS/F,EAAKD,MAAMgG,OACpBlB,EAAW7E,EAAKmB,MAAM0D,SAExBA,EAASO,OAAS,GAAKP,EAASO,OAAS,GAC3CpF,EAAKgB,SAAS,CACZoD,QAAS,8CAKb2B,EAAOC,KAAK,WAAY,CAAEnB,aAC1B7E,EAAKgB,SAAS,CACZ4J,YAAY,MA7TG5K,EAiUnB6K,SAAW,SAAAzE,GACT,IAAML,EAAS/F,EAAKD,MAAMgG,OADH+E,EAES9K,EAAKmB,MAA7BJ,EAFe+J,EAEf/J,YAFe+J,EAEFhK,SACNC,GACbgF,EAAOC,KAAK,OAAQ,CAClBI,WAAYA,IAGhBpG,EAAK6C,WAAWuD,IAzUCpG,EA4UnB6C,WAAa,SAAAuD,GAAc,IAAA2E,EACmB/K,EAAKmB,MAAzC6B,EADiB+H,EACjB/H,SAAUC,EADO8H,EACP9H,SAEE,MAHK8H,EACGhK,aAG1BiC,EAASU,KAAK0C,GACdpG,EAAKgB,SAAS,CAAEgC,SAAUA,EAAUjC,YAAa,QAEjDkC,EAASS,KAAK0C,GACdpG,EAAKgB,SAAS,CAAEiC,SAAUA,EAAUlC,YAAa,OAGnDf,EAAKoK,aAvVYpK,EA0VnBgL,cAAgB,WACd,IAAMvF,EAASzF,EAAKmB,MAAMsE,OAC1B,MAAe,KAAXA,EAEArE,EAAAC,EAAAC,cAAC2J,EAAD,CACE7G,QAASqB,EACTnB,OAAQtE,EAAK8F,eACbzB,SAAU,WACRrE,EAAKgB,SAAS,CAAEyE,OAAQ,QAKzB,IAvWUzF,EA0WnBkL,aAAe,WACblL,EAAKgB,SAAS,CACZoD,QAAS,MA5WMpE,EAgXnBmL,aAAe,SAAC9G,EAAUC,GACxB,IAAMF,EAAUpE,EAAKmB,MAAMiD,QAC3B,MAAgB,KAAZA,EACKhD,EAAAC,EAAAC,cAAC2J,EAAD,CAAO7G,QAASA,EAASE,OAAQA,EAAQD,SAAUA,IAErD,IArXUrE,EAwXnBoL,aAAe,SAAA1G,GAAQ,IACbqB,EAAW/F,EAAKD,MAAhBgG,OACR/F,EAAKgB,SAAS,CACZ2E,SAAUjB,IAEZqB,EAAOC,KAAK,OAAQ,CAClBtB,KAAMA,KA9XS1E,EAkYnBqL,aAAe,WAAM,IACXtF,EAAW/F,EAAKD,MAAhBgG,OACAvB,EAAWxE,EAAKmB,MAAhBqD,OACRxE,EAAKwK,WAAW,KAChBzE,EAAOC,KAAK,SAAU,CACpBsF,KAAM,UACN5G,KAAMF,KAxYSxE,EA4YnBuL,aAAe,WAAM,IACXxF,EAAW/F,EAAKD,MAAhBgG,OACAvB,EAAWxE,EAAKmB,MAAhBqD,OACRxE,EAAKgB,SAAS,CACZwD,OAAQ,OAEVuB,EAAOC,KAAK,SAAU,CACpBtB,KAAMF,KAnZSxE,EAuZnBwL,cAAgB,WAAM,IACZhH,EAAWxE,EAAKmB,MAAhBqD,OACR,OAAIA,EAEApD,EAAAC,EAAAC,cAAC2J,EAAD,CACE7G,QAAO,GAAA1C,OAAK8C,EAAOK,SAAZ,0BACPR,SAAUrE,EAAKqL,aACf/G,OAAQtE,EAAKuL,eAIZ,IAlaUvL,EAqanByL,YAAc,SAACjL,GACK,KAAdA,EAAEkL,SACJ1L,EAAK2K,eAraP3K,EAAKmB,MAAQ,CACX+E,WAAW,EACXf,OAAQ,KACRN,SAAU,GACV/D,OAAQ,IACRC,YAAa,IACbiC,SAAU,GACVC,SAAU,GACVmB,QAAS,GACTc,MAAO,GACP0F,YAAY,EACZjF,SAAU,KACVnB,OAAQ,KACRiB,OAAQ,GACR3B,MAAO,MAET,IAAM6H,EAAO1L,OAAA2L,EAAA,EAAA3L,CAAAD,GACP+F,EAAS/F,EAAKD,MAAMgG,OAEpB8F,ECAH,WAAiC,IAAXC,EAAWC,UAAA3G,OAAA,QAAAuB,IAAAoF,UAAA,GAAAA,UAAA,GAAJ,GAElC,OADqBrJ,OAAOsJ,aACRC,QAAQH,GDFNI,CAAa,QArBhB,OAuBbL,GACF9F,EAAOC,KAAK,aAAc,CACxBtB,KAAMyH,KAAKC,MAAMP,KAIrB9F,EAAOsG,GAAG,YAAa,SAAArH,GACI,qBAAdA,EAAKN,MAGhBiH,EAAQ3K,SAAS,CACf4J,YAAY,EACZ/F,SAAUG,EAAKN,KAAKG,aAIxBkB,EAAOsG,GAAG,QAAS,SAAArH,GACjB,IAAMH,EAAW8G,EAAQxK,MAAM0D,SACzBK,EAAQF,EAAKE,MACfA,GACFyG,EAAQ3K,SAAS,CACfkE,MAAOA,EAAM8B,OAAO,SAAA3B,GAAC,OAAIA,EAAER,WAAaA,IACxCM,OAAQD,EAAMoH,KAAK,SAAAjH,GAAC,OAAIA,EAAER,WAAaA,QAK7CkB,EAAOsG,GAAG,UAAW,SAAArH,GACnB2G,EAAQ3K,SAAS,CACfoD,QAASY,EAAKZ,UAEE,eAAdY,EAAKuH,MACPZ,EAAQ3K,SAAS,CACf6D,SAAU,GACV+F,YAAY,MAKlB7E,EAAOsG,GAAG,SAAU,WAClBV,EAAQnB,WAAW,KACnBzE,EAAOC,KAAK,SAAU,CACpBsF,KAAM,cAIVvF,EAAOsG,GAAG,SAAU,WAClBV,EAAQ3K,SAAS,CACfoD,QAAS,uCACTuB,SAAU,SAIdI,EAAOsG,GAAG,UAAW,SAAArH,GACnB2G,EAAQ3K,SAAS,CACfwD,OAAQQ,EAAKN,KACbiB,SAAUX,EAAKN,OAEjBqB,EAAOC,KAAK,UAAWhB,KAGzBe,EAAOsG,GAAG,OAAQ,SAAArH,GAChB,IAAMoB,EAAapB,EAAKoB,WACxBuF,EAAQ9I,WAAWuD,KAGrBL,EAAOsG,GAAG,OAAQ,WAChBV,EAAQzH,WACRyH,EAAQ3K,SAAS,CACfyE,OAAQ,GACRrB,QAAS,kBAEX2B,EAAOC,KAAK,mBAGdD,EAAOsG,GAAG,mBAAoB,SAAArH,IClF3B,WAAuC,IAAjB8G,EAAiBC,UAAA3G,OAAA,QAAAuB,IAAAoF,UAAA,GAAAA,UAAA,GAAV,GAAI/G,EAAM+G,UAAA3G,OAAA,EAAA2G,UAAA,QAAApF,EACvBjE,OAAOsJ,aACfQ,QAAQV,EAAMK,KAAKM,UAAUzH,IDkFtC0H,CAAa,OADA1H,EAAKN,QAnGH1E,wEA2aV,IAAA2M,EAYHxM,KAAKgB,MAVPyJ,EAFK+B,EAEL/B,WACA1E,EAHKyG,EAGLzG,UACArB,EAJK8H,EAIL9H,SACA/D,EALK6L,EAKL7L,OACAC,EANK4L,EAML5L,YACAiC,EAPK2J,EAOL3J,SACAC,EARK0J,EAQL1J,SACAiC,EATKyH,EASLzH,MACAC,EAVKwH,EAULxH,OACArB,EAXK6I,EAWL7I,MAGF,OAAIoC,EAEA9E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACsL,EAAD,CACE9L,OAAQA,EACRC,YAAaA,EACbiC,SAAUA,EACVC,SAAUA,EACVJ,WAAY1C,KAAK0K,SACjB3G,SAAU/D,KAAK2F,eACfhC,MAAOA,IAER3D,KAAK6K,iBAILJ,EAqBDxJ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WAAf,YACWL,EAAAC,EAAAC,cAAA,QAAMG,UAAU,aAAa0D,EAASA,EAAON,SAAW,IACjEzD,EAAAC,EAAAC,cAAA,KAAGuL,KAAK,IAAItL,GAAG,QAAOH,EAAAC,EAAAC,cAAA,sBAExBF,EAAAC,EAAAC,cAACwL,EAAD,CAAUtI,OAAQrE,KAAKiL,aAAclG,MAAOA,EAAOC,OAAQA,IAC1DhF,KAAKgL,aAAahL,KAAK+K,cACvB/K,KAAKqL,iBA1BRpK,EAAAC,EAAAC,cAAA,OAAKG,UAAU,YACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACbL,EAAAC,EAAAC,cAAA,SACEG,UAAU,QACV6J,KAAK,OACLyB,YAAY,sBACZC,SAAU7M,KAAKsK,aACfwC,QAAS9M,KAAKsL,YACdnF,MAAOzB,GAAY,KAErBzD,EAAAC,EAAAC,cAAA,UAAQG,UAAU,YAAYD,QAASrB,KAAKwK,aAA5C,OAIDxK,KAAKgL,aAAahL,KAAK+K,sBA1dXrJ,IAAMC,WEoChBoL,qBAnCb,SAAAA,EAAYnN,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+M,IACjBlN,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiN,GAAA5M,KAAAH,KAAMJ,KAoBRoN,QAAU,WAAM,IAAAzH,EACc1F,EAAKmB,MAA1BiM,EADO1H,EACP0H,UAAWrH,EADJL,EACIK,OAClB,OAAIqH,EACKhM,EAAAC,EAAAC,cAAC+L,EAAD,CAAYtH,OAAQA,IAEtB3E,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UAAf,8BAxBPzB,EAAKmB,MAAQ,CACXiM,WAAW,EACXrH,OAAQ,MAEV,IAAM4F,EAAO1L,OAAA2L,EAAA,EAAA3L,CAAAD,GACP+F,EAASuH,IAAGvL,GAPD,OAQjBgE,EAAOsG,GAAG,UAAW,WACnBV,EAAQ3K,SAAS,CACfoM,WAAW,EACXrH,OAAQA,MAGZA,EAAOsG,GAAG,aAAc,WACtBV,EAAQ3K,SAAS,CACfoM,WAAW,EACXrH,OAAQ,SAjBK/F,wEA6BjB,OACEoB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OAAOtB,KAAKgN,kBA/BftL,IAAMC,YCMJyL,QACW,cAA7B7K,OAAO8K,SAASC,UAEe,UAA7B/K,OAAO8K,SAASC,UAEhB/K,OAAO8K,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOxM,EAAAC,EAAAC,cAACuM,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.abc0d2d8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Piece extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hoverMark: ''\r\n    }\r\n  }\r\n  handleClick = e => {\r\n    if (this.props.mark !== '') {\r\n      return;\r\n    }\r\n    this.props.move(this.props.identify);\r\n  }\r\n  handleMouseOver = e => {\r\n    const { myTurn, currentTurn } = this.props;\r\n    if (myTurn !== currentTurn) {\r\n      return;\r\n    }\r\n    this.setState({ hoverMark: myTurn });\r\n  }\r\n  handleMouseOut = e => {\r\n    this.setState({ hoverMark: '' });\r\n  }\r\n  render() {\r\n    const mark = this.props.mark;\r\n    const hoverMark = mark === '' ? this.state.hoverMark : '';\r\n    return (\r\n      <td\r\n        id={this.props.identify}\r\n        onClick={this.handleClick}\r\n        className={`piece-${mark}${hoverMark !== '' ? ' hover' : ''}`}\r\n        onMouseOver={this.handleMouseOver}\r\n        onMouseOut={this.handleMouseOut}\r\n      >\r\n        {mark}\r\n        {hoverMark}\r\n      </td>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Piece;","export const SOCKET_IO_HOST=process.env.REACT_APP_SOCKET_IO_HOST;\r\nexport const GOMOKU_COLUMN=process.env.REACT_APP_GOMOKU_COLUMN;\r\nexport const GOMOKU_ROW=process.env.REACT_APP_GOMOKU_ROW;","import React from 'react';\r\nimport $ from 'jquery';\r\nimport Piece from './Piece';\r\nimport { GOMOKU_COLUMN, GOMOKU_ROW } from '../config';\r\n\r\nclass Board extends React.Component {\r\n  componentDidMount = () => {\r\n    const outerContent = $('#board');\r\n    const innerContent = $('#gomoku');\r\n   \r\n    outerContent.scrollLeft( (innerContent.width() - outerContent.width()) / 2);\r\n    window.scrollTo(0, ( window.innerHeight / 2 ));\r\n  }\r\n  move = identify => {\r\n    const { myTurn, currentTurn } = this.props;\r\n\r\n    if (myTurn !== currentTurn) {\r\n      return;\r\n    }\r\n\r\n    this.props.updateMove(identify);\r\n  }\r\n\r\n  hasMark = identify => {\r\n    const { xHistory, oHistory } = this.props;\r\n\r\n    if (xHistory.indexOf(identify) >= 0) {\r\n      return 'x';\r\n    }\r\n    if (oHistory.indexOf(identify) >= 0) {\r\n      return 'o';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  drawBoard = () => {\r\n    const rowNumber = GOMOKU_ROW;\r\n    const columnNumber = GOMOKU_COLUMN;\r\n    let table = [];\r\n    for (let i = 0; i < rowNumber; i++) {\r\n      let children = [];\r\n      for (let j = 0; j < columnNumber; j++) {\r\n        const identify = `${i}-${j}`;\r\n        children.push(\r\n          <Piece\r\n            key={identify}\r\n            identify={identify}\r\n            move={this.move}\r\n            myTurn={this.props.myTurn}\r\n            currentTurn={this.props.currentTurn}\r\n            mark={this.hasMark(identify)}\r\n          />\r\n        );\r\n      }\r\n      table.push(<tr key={i}>{children}</tr>);\r\n    }\r\n    return table;\r\n  }\r\n\r\n  render() {\r\n    const { myTurn, currentTurn, score } = this.props;\r\n    return (\r\n      <div id=\"board\" className=\"board\">\r\n        <div className=\"control-board\">\r\n          <div className=\"turn\">\r\n            {myTurn === currentTurn ? 'You ' : 'Opponent '}\r\n            go\r\n          </div>\r\n          <div className=\"score\">\r\n            <div className=\"point\">{score ? Object.keys(score).map((k,i) =>\r\n              score[k] + (i === 0 ? \" - \" : '')) : ''}\r\n            </div>\r\n          </div>\r\n          <div className=\"action\">\r\n            <button className=\"btn\" onClick={this.props.quitGame}>\r\n              Quit\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <table id=\"gomoku\" className=\"gomoku\">\r\n          <tbody>{this.drawBoard()}</tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Board;","import React from 'react'\r\n\r\nclass Popup extends React.Component {\r\n  render() {\r\n    const { message, callback, cancel } = this.props;\r\n    return (\r\n      <div className={`popup ${message !== '' ? 'enable' : ''}`}>\r\n        <div className='content'>\r\n          <div className='message'>{message}</div>\r\n          <div className='action'>\r\n            {typeof cancel !== 'undefined' ? (\r\n              <button className='btn cancel' onClick={cancel}>\r\n                No\r\n              </button>\r\n            ) : (\r\n              ''\r\n            )}\r\n            <button className='btn' onClick={callback}>\r\n              Ok\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Popup;","import React from 'react';\r\n\r\nclass User extends React.Component {\r\n  invite = e => {\r\n    e.preventDefault();\r\n\r\n    const { user } = this.props;\r\n    this.props.invite(user);\r\n  }\r\n\r\n  renderAction = () => {\r\n    const canInvite = this.props.canInvite;\r\n    if (canInvite) {\r\n      return (<button className=\"link-button\" onClick={this.invite}>invite</button>)\r\n    }\r\n    return '';\r\n  }\r\n\r\n  render() {\r\n    const { user } = this.props;\r\n    return (\r\n      <tr>\r\n        <td className='user'>{user.username}</td>\r\n        <td className='action'>\r\n          {user.status !== 'waiting' ? (\r\n            user.status\r\n          ) : this.renderAction()}\r\n        </td>\r\n      </tr>\r\n    )\r\n  }\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport User from './User';\r\n\r\nclass UserList extends React.Component {\r\n  invite = data => {\r\n    this.props.invite(data);\r\n  }\r\n\r\n  render() {\r\n    const { users, myUser } = this.props;\r\n    return (\r\n      <div className='user-list'>\r\n        <div>Online users</div>\r\n        <div className='user-table'>\r\n          <table>\r\n            <tbody>\r\n              {users.length <= 0 ?\r\n                <tr><td className=\"info\">No one is online</td></tr> :\r\n                users.map((u, i) => (\r\n                  <User\r\n                    canInvite={(myUser && myUser.status === 'waiting') ? true : false}\r\n                    key={i}\r\n                    invite={this.invite}\r\n                    user={u}\r\n                  />\r\n                ))\r\n              }\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserList;","import React from 'react';\r\nimport Board from './Board';\r\nimport Popup from './Popup';\r\nimport UserList from './UserList';\r\nimport {getLocalItem, setLocalItem} from '../Utils';\r\n\r\nclass Controller extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      gameStart: false,\r\n      myUser: null,\r\n      username: '',\r\n      myTurn: 'x',\r\n      currentTurn: 'x',\r\n      xHistory: [],\r\n      oHistory: [],\r\n      message: '',\r\n      users: [],\r\n      registered: false,\r\n      opponent: null,\r\n      invite: null,\r\n      winner: '',\r\n      score: null\r\n    }\r\n    const context = this;\r\n    const socket = this.props.socket;\r\n\r\n    const currentUser = getLocalItem('user');\r\n\r\n    if (currentUser) {\r\n      socket.emit('re_connect', {\r\n        user: JSON.parse(currentUser)\r\n      })\r\n    }\r\n    \r\n    socket.on('reconnect', data => {\r\n      if (typeof data.user === 'undefined') {\r\n        return;\r\n      }\r\n      context.setState({\r\n        registered: true,\r\n        username: data.user.username\r\n      });\r\n    })\r\n\r\n    socket.on('users', data => {\r\n      const username = context.state.username;\r\n      const users = data.users;\r\n      if (users) {\r\n        context.setState({\r\n          users: users.filter(u => u.username !== username),\r\n          myUser: users.find(u => u.username === username)\r\n        });\r\n      }\r\n    });\r\n\r\n    socket.on('message', data => {\r\n      context.setState({\r\n        message: data.message\r\n      });\r\n      if (data.code === 'duplicated') {\r\n        context.setState({\r\n          username: '',\r\n          registered: false\r\n        });\r\n      }\r\n    });\r\n\r\n    socket.on('accept', () => {\r\n      context.toggleGame('x');\r\n      socket.emit('accept', {\r\n        type: 'inviter'\r\n      });\r\n    });\r\n\r\n    socket.on('reject', () => {\r\n      context.setState({\r\n        message: \"Opponent don't want to play with you\",\r\n        opponent: null\r\n      });\r\n    });\r\n\r\n    socket.on('receive', data => {\r\n      context.setState({\r\n        invite: data.user,\r\n        opponent: data.user\r\n      });\r\n      socket.emit('receive', data);\r\n    });\r\n\r\n    socket.on('move', data => {\r\n      const coordinate = data.coordinate;\r\n      context.updateMove(coordinate);\r\n    });\r\n\r\n    socket.on('quit', () => {\r\n      context.quitGame();\r\n      context.setState({\r\n        winner: '',\r\n        message: 'Opponent left'\r\n      });\r\n      socket.emit('opponent_quit');\r\n    });\r\n\r\n    socket.on('register_success', data => {\r\n      const user = data.user;\r\n      setLocalItem('user', user);\r\n    })\r\n  }\r\n\r\n  updateScore = (winner) => {\r\n    const {score, myUser, myTurn, opponent} = this.state;\r\n    if (!opponent) {\r\n      setTimeout(() => {\r\n        this.updateScore();\r\n      }, 1000);\r\n    }\r\n    let newScore = score;\r\n    if (!score || typeof winner === 'undefined') {\r\n      newScore = {};\r\n      newScore[myUser.username] = 0;\r\n      newScore[opponent.username] = 0;\r\n    } else if (score) {\r\n      if (winner === myTurn) {\r\n        newScore[myUser.username] = newScore[myUser.username]+1;\r\n      } else {\r\n        newScore[opponent.username] = newScore[opponent.username]+1;\r\n      }\r\n    }\r\n    this.setState({\r\n      score: newScore\r\n    })\r\n  }\r\n\r\n  handleQuitGame = () => {\r\n    const socket = this.props.socket;\r\n    socket.emit('quit');\r\n    this.quitGame();\r\n  }\r\n\r\n  resetGame = () => {\r\n    this.setState({\r\n      oHistory: [],\r\n      xHistory: []\r\n    });\r\n  }\r\n\r\n  quitGame = () => {\r\n    this.setState({\r\n      winner: '',\r\n      xHistory: [],\r\n      oHistory: [],\r\n      myTurn: '',\r\n      currentTurn: 'x',\r\n      gameStart: false,\r\n      invite: null,\r\n      opponent: null,\r\n      score: null\r\n    });\r\n  }\r\n\r\n  gameOver = coordinate => {\r\n    const split = coordinate.map(value => {\r\n      const split = value.split('-');\r\n      return [parseInt(split[0]), parseInt(split[1])];\r\n    })\r\n    \r\n    for (let value of split) {\r\n      const x = value[0];\r\n      const sameX = split.filter(obj => obj[0] === x);\r\n  \r\n      if (sameX.length >= 5) {\r\n        const listY = sameX.map(v => v[1]).sort((a, b) => +a - +b);\r\n        let result = false;\r\n        listY.forEach((v, i) => {\r\n          if (typeof listY[i + 4] !== 'undefined' && (listY[i + 4] - v === 4)) {\r\n            result = true;\r\n          }\r\n        });\r\n        if (result) {\r\n          return result;\r\n        }\r\n      }\r\n  \r\n      const y = value[1];\r\n      const sameY = split.filter(obj => obj[1] === y);\r\n      if (sameY.length >= 5) {\r\n        const listX = sameY.map(v => v[0]).sort((a, b) => +a - +b);\r\n        let result = false;\r\n        listX.forEach((v, i) => {\r\n          if (typeof listX[i + 4] !== 'undefined' && (listX[i + 4] - v === 4)) {\r\n            result = true;\r\n          }\r\n        });\r\n        if (result) {\r\n          return result;\r\n        }\r\n      }\r\n    }\r\n  \r\n    for (let value of split) {\r\n      const x = parseInt(value[0]);\r\n      const y = parseInt(value[1]);\r\n      const diagonal = [];\r\n      for (let i = 1; i < 5; i++) {\r\n        const search = split.filter(v => v[0] === (x + i) && v[1] === (y + i))\r\n        if (search.length > 0) {\r\n          diagonal.push(i);\r\n        }\r\n      }\r\n      if (diagonal.length >= 4) {\r\n        return true;\r\n      }\r\n    }\r\n  \r\n    for (let value of split) {\r\n      const x = parseInt(value[0]);\r\n      const y = parseInt(value[1]);\r\n      const diagonal = [];\r\n      for (let i = 1; i < 5; i++) {\r\n        const search = split.filter(v => v[0] === (x - i) && v[1] === (y - i));\r\n        if (search.length > 0) {\r\n          diagonal.push(i);\r\n        }\r\n      }\r\n      if (diagonal.length >= 4) {\r\n        return true;\r\n      }\r\n    }\r\n  \r\n    for (let value of split) {\r\n      const x = parseInt(value[0]);\r\n      const y = parseInt(value[1]);\r\n      const diagonal = [];\r\n      for (let i = 1; i < 5; i++) {\r\n        const search = split.filter(v => v[0] === (x + i) && v[1] === (y - i));\r\n        if (search.length > 0) {\r\n          diagonal.push(i);\r\n        }\r\n      }\r\n      if (diagonal.length >= 4) {\r\n        return true;\r\n      }\r\n    }\r\n  \r\n    for (let value of split) {\r\n      const x = parseInt(value[0]);\r\n      const y = parseInt(value[1]);\r\n      const diagonal = [];\r\n      for (let i = 1; i < 5; i++) {\r\n        const search = split.filter(v => v[0] === (x - i) && v[1] === (y + i));\r\n        if (search.length > 0) {\r\n          diagonal.push(i);\r\n        }\r\n      }\r\n      if (diagonal.length >= 4) {\r\n        return true;\r\n      }\r\n    }\r\n  \r\n    return false;\r\n  }\r\n\r\n  gameCycle = () => {\r\n    const { xHistory, oHistory, myTurn } = this.state;\r\n\r\n    const isXWin = this.gameOver(xHistory);\r\n    const isOWin = this.gameOver(oHistory);\r\n\r\n    let message = '';\r\n\r\n    if (isXWin) {\r\n      message = myTurn === 'x' ? 'You won' : 'You lose';\r\n    }\r\n\r\n    if (isOWin) {\r\n      message = myTurn === 'o' ? 'You won' : 'You lose';\r\n    }\r\n\r\n    if (isXWin || isOWin) {\r\n      const winner = isXWin ? 'x' : 'o';\r\n      this.updateScore(winner);\r\n      message += '. Do you want to play again ?';\r\n      this.setState({\r\n        winner: message\r\n      });\r\n      this.resetGame();\r\n    }\r\n  }\r\n\r\n  toggleGame = myTurn => {\r\n    this.setState({\r\n      winner: '',\r\n      gameStart: true,\r\n      myTurn: myTurn,\r\n      oHistory: [],\r\n      xHistory: [],\r\n      score: null\r\n    });\r\n    this.updateScore();\r\n  }\r\n\r\n  handleChange = e => {\r\n    e.preventDefault();\r\n    if (e.target.value.length > 20) {\r\n      return;\r\n    }\r\n    this.setState({ username: e.target.value });\r\n  }\r\n\r\n  handleEnter = e => {\r\n    const socket = this.props.socket;\r\n    const username = this.state.username;\r\n\r\n    if (username.length < 3 || username.length > 20) {\r\n      this.setState({\r\n        message: 'Username length must be between 3 and 20'\r\n      });\r\n      return;\r\n    }\r\n\r\n    socket.emit('register', { username });\r\n    this.setState({\r\n      registered: true\r\n    });\r\n  }\r\n\r\n  sendMove = coordinate => {\r\n    const socket = this.props.socket;\r\n    const { currentTurn, myTurn } = this.state;\r\n    if (myTurn === currentTurn) {\r\n      socket.emit('move', {\r\n        coordinate: coordinate\r\n      });\r\n    }\r\n    this.updateMove(coordinate);\r\n  }\r\n\r\n  updateMove = coordinate => {\r\n    const { xHistory, oHistory, currentTurn } = this.state;\r\n\r\n    if (currentTurn === 'x') {\r\n      xHistory.push(coordinate);\r\n      this.setState({ xHistory: xHistory, currentTurn: 'o' });\r\n    } else {\r\n      oHistory.push(coordinate);\r\n      this.setState({ oHistory: oHistory, currentTurn: 'x' });\r\n    }\r\n\r\n    this.gameCycle();\r\n  }\r\n\r\n  displayWinner = () => {\r\n    const winner = this.state.winner;\r\n    if (winner !== '') {\r\n      return (\r\n        <Popup\r\n          message={winner}\r\n          cancel={this.handleQuitGame}\r\n          callback={() => {\r\n            this.setState({ winner: '' })\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    return '';\r\n  }\r\n\r\n  clearMessage = () => {\r\n    this.setState({\r\n      message: ''\r\n    });\r\n  }\r\n\r\n  displayPopup = (callback, cancel) => {\r\n    const message = this.state.message;\r\n    if (message !== '') {\r\n      return <Popup message={message} cancel={cancel} callback={callback} />;\r\n    }\r\n    return '';\r\n  }\r\n\r\n  handleInvite = user => {\r\n    const { socket } = this.props;\r\n    this.setState({\r\n      opponent: user\r\n    });\r\n    socket.emit('send', {\r\n      user: user\r\n    });\r\n  }\r\n\r\n  acceptInvite = () => {\r\n    const { socket } = this.props;\r\n    const { invite } = this.state;\r\n    this.toggleGame('o');\r\n    socket.emit('accept', {\r\n      type: 'invitee',\r\n      user: invite\r\n    });\r\n  }\r\n\r\n  rejectInvite = () => {\r\n    const { socket } = this.props;\r\n    const { invite } = this.state;\r\n    this.setState({\r\n      invite: null\r\n    });\r\n    socket.emit('reject', {\r\n      user: invite\r\n    });\r\n  }\r\n\r\n  displayInvite = () => {\r\n    const { invite } = this.state;\r\n    if (invite) {\r\n      return (\r\n        <Popup\r\n          message={`${invite.username} want to play with you`}\r\n          callback={this.acceptInvite}\r\n          cancel={this.rejectInvite}\r\n        />\r\n      );\r\n    }\r\n    return '';\r\n  }\r\n\r\n  handleKeyUp = (e) => {\r\n    if (e.keyCode === 13) {\r\n      this.handleEnter();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      registered,\r\n      gameStart,\r\n      username,\r\n      myTurn,\r\n      currentTurn,\r\n      xHistory,\r\n      oHistory,\r\n      users,\r\n      myUser,\r\n      score\r\n    } = this.state;\r\n\r\n    if (gameStart) {\r\n      return (\r\n        <div>\r\n          <Board\r\n            myTurn={myTurn}\r\n            currentTurn={currentTurn}\r\n            xHistory={xHistory}\r\n            oHistory={oHistory}\r\n            updateMove={this.sendMove}\r\n            quitGame={this.handleQuitGame}\r\n            score={score}\r\n          />\r\n          {this.displayWinner()}\r\n        </div>\r\n      );\r\n    } else {\r\n      if (!registered) {\r\n        return (\r\n          <div className='register'>\r\n            <div className='user-input'>\r\n              <input\r\n                className='input'\r\n                type='text'\r\n                placeholder='Enter your username'\r\n                onChange={this.handleChange}\r\n                onKeyUp={this.handleKeyUp}\r\n                value={username || ''}\r\n              />\r\n              <button className='btn enter' onClick={this.handleEnter}>\r\n                Go\r\n              </button>\r\n            </div>\r\n            {this.displayPopup(this.clearMessage)}\r\n          </div>\r\n        );\r\n      } else {\r\n        return (\r\n          <div className='lobby'>\r\n            <div className='my-user'>\r\n              Welcome, <span className=\"highlight\">{myUser ? myUser.username : ''}</span>\r\n              <a href=\"/\" id=\"home\"><span>Home</span></a>\r\n            </div>\r\n            <UserList invite={this.handleInvite} users={users} myUser={myUser}/>\r\n            {this.displayPopup(this.clearMessage)}\r\n            {this.displayInvite()}\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Controller;","export function setCookie(cname, cvalue, exdays) {\r\n  var d = new Date();\r\n  d.setTime(d.getTime() + (exdays*24*60*60*1000));\r\n  var expires = \"expires=\"+ d.toUTCString();\r\n  document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n}\r\n\r\nexport function getCookie(cname) {\r\n  var name = cname + \"=\";\r\n  var decodedCookie = decodeURIComponent(document.cookie);\r\n  var ca = decodedCookie.split(';');\r\n  for(var i = 0; i <ca.length; i++) {\r\n    var c = ca[i];\r\n    while (c.charAt(0) === ' ') {\r\n      c = c.substring(1);\r\n    }\r\n    if (c.indexOf(name) === 0) {\r\n      return c.substring(name.length, c.length);\r\n    }\r\n  }\r\n  return \"\";\r\n}\r\n\r\nexport function setLocalItem(name = '', data) {\r\n  const localStorage = window.localStorage;\r\n  localStorage.setItem(name, JSON.stringify(data));\r\n}\r\n\r\nexport function getLocalItem(name = '') {\r\n  const localStorage = window.localStorage;\r\n  return localStorage.getItem(name);\r\n}","import React from 'react';\nimport io from 'socket.io-client';\nimport Controller from './components/Controller';\nimport './App.css';\nimport {SOCKET_IO_HOST} from './config'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      connected: false,\n      socket: null\n    }\n    const context = this;\n    const socket = io(SOCKET_IO_HOST);\n    socket.on('connect', () => {\n      context.setState({\n        connected: true,\n        socket: socket\n      })\n    })\n    socket.on('disconnect', () => {\n      context.setState({\n        connected: false,\n        socket: null\n      })\n    })\n  }\n  display = () => {\n    const {connected, socket} = this.state;\n    if (connected) {\n      return <Controller socket={socket}></Controller>\n    }\n    return <div className=\"center\">Connecting... Please wait</div>\n  }\n  render() {\n    return (\n      <div className=\"app\">{this.display()}</div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}